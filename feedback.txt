=================================== PART 1 ===================================

This report is for student s1709906

The raw overall mark is (20/25)

The awarded mark includes a deduction for any days late
(5% per calendar day).

Days late: (0)
The awarded mark is (20/25)


Overall comments:

In general this is an excellent submission which meets the requirements of
Coursework 1 very well and provides a very good basis for continuing with
Coursework 2.


As described in the coursework instructions, marks are awarded for 3
aspects: correctness, readability and efficiency.  See below for
comments on these and other aspects of your submission.

1. Correctness (15 marks)
-------------------------
Your nextPosition() method was expected be a correct implementation of
the "next position" function for the drone, giving the correct next
position for all sixteen possible compass directions.  Your
inPlayArea() was expected to correctly check whether a position is in
the defined playing area.  Correctness for both methods was assessed
by running the provided 30 JUnit tests on your submitted code.

All tests passed.


2. Readability (5 marks)
------------------------
Your method definitions were expected to be clear and concise. Your
overall implementation of the Direction and Position classes was
expected to be readable and clear.

You chose an enum to represent the Direction class, which is a concise way to
express in Java a collection of constant values.
Good use of the enum class ordinal method to make the nextPosition() method very
compact.
These classes are concise, clear and readable, as required for this coursework.


3. Efficiency (5 marks)
-----------------------
The instructions said:

  The nextPosition() method will be executed multiple times in the
  PowerGrab game, and while testing the game, so it is important that
  it should be efficient. The game development team have not yet
  decided on the Java compiler which will be used to compile the
  release version of the game, so the compiler optimisations which
  will be applied are not yet known. The safest assumption in this
  setting is to assume that the compiler will not optimise your
  function at all and that you should explicitly code any
  optimisations which can be made to the nextPosition() method.

The most significant optimisation which can be applied to the function is to
avoid the repeated evaluation of constant expressions.
However on calls to nextPosition() you recompute the same amounts by which
latitude and longitude are shifted.  It would have been better to define new
constants to capture these repeated shift amounts and enable each to be
calculated just once. This was a missed opportunity.


4. Submission directory structure
---------------------------------
Some submissions had files in unexpected directories.  If this was the
case, some comments on this are made here.  Otherwise this section is blank.
No marks were deducted if there were issues.




5. Compilation issues
---------------------
A few submissions required some manual intervention in order to get
them to compile.  If this was the case, some comments on this are made
here.  Otherwise this section is blank.  All issues were very minor
and in no cases were marks deducted.



END OF REPORT

--

=================================== PART 2 ===================================

This report is for student s1709906

The raw overall mark is (66/75)

The awarded mark includes a deduction for any days late
(5% of the maximum mark per calendar day).

Days late: (0)
The awarded mark is (66/75)


Overall comments (may be empty):
>>>>>>>>>>>>

<<<<<<<<<<<<


As described on page 16 of the coursework instructions, marks have
been awarded for 3 aspects:

1. the report,
2. the implementation,
3. the output generated when tests are run.

See below for your mark for each aspect and associated comments.


1. Report (23/30)
-----------------
The instructions asked you to submit a report documenting your project
containing three sections.  Descriptions of what was asked for in each
section and comments on what you provided in your report are as
follows:

1.1 Software architecture description. This section provides a
description of the software architecture of your application. Your
application is made up of a collection of Java classes; explain why
you identified these classes as being the right ones for your
application. Identify class hierarchical relationships between
classes: which classes are subclasses of others?

>>>>>>>>>>>>
Your software architecture section provides a good description of why classes
were identified.
You defined a drone class with subclasses for the stateless and stateful drone
which was a good design decision.
Good that Station class defined.  Would have been good too to have a Map class.
You identified utility classes for handling input and output; this was a good
design decision.
Your naming of classes is descriptive and consistent.
UML diagram well drawn and helpful.
<<<<<<<<<<<<

1.2. Class documentation. Provide concise documentation for each class
in your application. Explain each class as through providing
documentation for a developer who will be maintaining your application
in the future.

>>>>>>>>>>>>
You have provided documentation for the classes in your application.
Your documentation is well-structured and systematic.
The level of documentation provided is consistent, with all methods having some
documentation.
You documented both public and private methods of your classes; this is the
right kind of documentation to provide to someone who is maintaining your
application.  However, would have been good to explicitly indicate which methods
are private.
Method type information is included in your documentation (method input types
and method result types are specified).
Your naming of methods is descriptive and consistent.
<<<<<<<<<<<<

1.3. Stateful drone strategy. This section explains the strategy which
is used by your stateful drone to improve their score relative to
the stateless drone. You should explain what is remembered in the
state of the stateful drone and how this is used to improve the
droneâ€™s score.  This section of your report should contain two
graphical figures (similar to Figure 6 and Figure 7 in this document)
which have been made using the http://geojson.io
geojson.io
GitHub Gist GeoJSON TopoJSON CSV KML WKT Shapefile. New. Share. Meta. Add map layer Zoom to features Clear Random: Points Add bboxes Flatten Multi Features Load encoded polyline Load WKB Base64 Encoded String Load WKB Hex Encoded String Load WKT String.
geojson.io
website, rendering
one flight of your stateless drone and one flight of your stateful
drone on a PowerGrab map of your choosing. It can be any of the
available PowerGrab maps, but make sure that the same map is used for
both the stateless drone and the stateful drone.

>>>>>>>>>>>>
You provided a detailed description of the strategy of the stateful drone.
Strategy generally is straightforward to follow.
As required, you explained what is remembered in the state of the stateful
drone.  However explanation is rather spread out.
Danger avoidance is described here; you explain how the drone avoids negative
charging stations.
Interesting to read about thorough testing.
As required, you included plots of the flight path for the stateless and
stateful drones.
<<<<<<<<<<<<

2. Implementation (28/30)
-------------------------
The instructions were as follows:

Your submission should faithfully implement the stateless and the
stateful drones of the PowerGrab game, hosted in a framework which
allows the drone to make 250 moves against a map for a particular
day. Your application should be usably efficient, without significant
stalls while executing. Your code should be readable and clear, making
use of private values, variables and functions, and encapsulating code
and data structures. Where it is appropriate to do so, your classes
should be structured in a way which makes use of the Java class
hierarchy mechanism. All else being equal, code with comments should
receive a higher mark than code without comments. Everyone thinks that
their code is self-documenting, but it isn't.

Comments on compiling your code using Maven (may be empty if no issues):
>>>>>>>>>>>>
 
<<<<<<<<<<<<

Comments on the performance of your implementation:
>>>>>>>>>>>>
Your project ran efficiently, generating a drone trail in seconds or less. 
<<<<<<<<<<<<

Comments from a review of your submitted code:
>>>>>>>>>>>>
You were asked to encapsulate information and make fields or methods private if
possible; you have done this extensively.
You have declared final values for constants in your application; this is good
practice.
You have declared class hierarchies in your application; this is good practice.
Your application does not handle any exceptional cases which may arise. These
exceptions will propagate up to be reported to the user instead of being managed
by your application.
Your application makes good use of foreach loops and collection classes.
You used the Mapbox library to generate your Geo-JSON code; this was a good idea
and the easiest way to generate the Geo-JSON files.
You did not use the raw JSON objects (JsonObject/JsonElement) from the Google
GSON library in your application. This was a good decision because you do not
need to use them.
You used the random-number seed correctly ininitialising your random number
generator. This is good because it means that you will be able to reproduce the
results of your program in the future.
You provided good comments in your code to help other readers to understand it.
Good to see use of both Javadoc and comments within methods.
<<<<<<<<<<<<


3. Output (15/15)
-----------------
The instructions specified:

The output files which you submit will be tested to ensure that the
moves made by the drone are legal according to the rules of the
PowerGrab game, and the class of drone which is being used. The
quality of the drone strategy implemented will be graded depending on
the score which the drone achieves: the higher the score, the better
the quality of the drone.


Comments on your .geojson output files (may be empty):
>>>>>>>>>>>>
All GeoJSON output files look good.
<<<<<<<<<<<<

Comments on your .txt output files (may be empty):
>>>>>>>>>>>>
Excellent strategy.  All coins collected on all stateful test runs and no
errors.
<<<<<<<<<<<<

Assessment of your output was assisted by the use of a program that
analysed the output files generated by your submitted code.  The
output files considered include both those which you submitted and
further files generated during testing.  Here is the analysis report.
>>>>>>>>>>>>
Begin report for student s1709906.


Processing stateless Geo-JSON
Processing stateless-01-01-2019.geojson ... read  ... parsed  ... has drone trail  ... coverage 65.57%  ... success.
Processing stateless-02-02-2019.geojson ... read  ... parsed  ... has drone trail  ... coverage 84.23%  ... success.
Processing stateless-03-03-2019.geojson ... read  ... parsed  ... has drone trail  ... coverage 76.19%  ... success.
Processing stateless-04-04-2019.geojson ... read  ... parsed  ... has drone trail  ... coverage 49.24%  ... success.
Processing stateless-05-05-2019.geojson ... read  ... parsed  ... has drone trail  ... coverage 98.80%  ... success.
Processing stateless-06-06-2019.geojson ... read  ... parsed  ... has drone trail  ... coverage 62.88%  ... success.
Processing stateless-07-07-2019.geojson ... read  ... parsed  ... has drone trail  ... coverage 81.18%  ... success.
Processing stateless-08-08-2019.geojson ... read  ... parsed  ... has drone trail  ... coverage 98.51%  ... success.
Processing stateless-09-09-2019.geojson ... read  ... parsed  ... has drone trail  ... coverage 97.58%  ... success.
Processing stateless-10-10-2019.geojson ... read  ... parsed  ... has drone trail  ... coverage 61.62%  ... success.
Processing stateless-11-11-2019.geojson ... read  ... parsed  ... has drone trail  ... coverage 72.91%  ... success.
Processing stateless-12-12-2019.geojson ... read  ... parsed  ... has drone trail  ... coverage 98.71%  ... success.

Processing stateful Geo-JSON
Processing stateful-01-01-2019.geojson ... read  ... parsed  ... has drone trail  ... coverage 84.17%  ... success.
Processing stateful-01-01-2020.geojson ... read  ... parsed  ... has drone trail  ... coverage 85.23%  ... success.
Processing stateful-02-02-2019.geojson ... read  ... parsed  ... has drone trail  ... coverage 95.42%  ... success.
Processing stateful-02-02-2020.geojson ... read  ... parsed  ... has drone trail  ... coverage 88.57%  ... success.
Processing stateful-03-03-2019.geojson ... read  ... parsed  ... has drone trail  ... coverage 92.76%  ... success.
Processing stateful-03-03-2020.geojson ... read  ... parsed  ... has drone trail  ... coverage 89.31%  ... success.
Processing stateful-04-04-2019.geojson ... read  ... parsed  ... has drone trail  ... coverage 85.20%  ... success.
Processing stateful-04-04-2020.geojson ... read  ... parsed  ... has drone trail  ... coverage 89.41%  ... success.
Processing stateful-05-05-2019.geojson ... read  ... parsed  ... has drone trail  ... coverage 87.15%  ... success.
Processing stateful-05-05-2020.geojson ... read  ... parsed  ... has drone trail  ... coverage 81.09%  ... success.
Processing stateful-06-06-2019.geojson ... read  ... parsed  ... has drone trail  ... coverage 92.01%  ... success.
Processing stateful-06-06-2020.geojson ... read  ... parsed  ... has drone trail  ... coverage 80.05%  ... success.
Processing stateful-07-07-2019.geojson ... read  ... parsed  ... has drone trail  ... coverage 92.14%  ... success.
Processing stateful-07-07-2020.geojson ... read  ... parsed  ... has drone trail  ... coverage 84.63%  ... success.
Processing stateful-08-08-2019.geojson ... read  ... parsed  ... has drone trail  ... coverage 90.81%  ... success.
Processing stateful-08-08-2020.geojson ... read  ... parsed  ... has drone trail  ... coverage 93.17%  ... success.
Processing stateful-09-09-2019.geojson ... read  ... parsed  ... has drone trail  ... coverage 88.31%  ... success.
Processing stateful-09-09-2020.geojson ... read  ... parsed  ... has drone trail  ... coverage 84.27%  ... success.
Processing stateful-10-10-2019.geojson ... read  ... parsed  ... has drone trail  ... coverage 86.83%  ... success.
Processing stateful-10-10-2020.geojson ... read  ... parsed  ... has drone trail  ... coverage 84.20%  ... success.
Processing stateful-11-11-2019.geojson ... read  ... parsed  ... has drone trail  ... coverage 85.99%  ... success.
Processing stateful-11-11-2020.geojson ... read  ... parsed  ... has drone trail  ... coverage 84.89%  ... success.
Processing stateful-12-12-2019.geojson ... read  ... parsed  ... has drone trail  ... coverage 91.30%  ... success.
Processing stateful-12-12-2020.geojson ... read  ... parsed  ... has drone trail  ... coverage 84.06%  ... success.

Processing stateless
Processing stateless-01-01-2019.txt ... read  ... parsed  ... syntax analysed  ... semantic analysis complete ... passed.
Processing stateless-02-02-2019.txt ... read  ... parsed  ... syntax analysed  ... semantic analysis complete ... passed.
Processing stateless-03-03-2019.txt ... read  ... parsed  ... syntax analysed  ... semantic analysis complete ... passed.
Processing stateless-04-04-2019.txt ... read  ... parsed  ... syntax analysed  ... semantic analysis complete ... passed.
Processing stateless-05-05-2019.txt ... read  ... parsed  ... syntax analysed  ... semantic analysis complete ... passed.
Processing stateless-06-06-2019.txt ... read  ... parsed  ... syntax analysed  ... semantic analysis complete ... passed.
Processing stateless-07-07-2019.txt ... read  ... parsed  ... syntax analysed  ... semantic analysis complete ... passed.
Processing stateless-08-08-2019.txt ... read  ... parsed  ... syntax analysed  ... semantic analysis complete ... passed.
Processing stateless-09-09-2019.txt ... read  ... parsed  ... syntax analysed  ... semantic analysis complete ... passed.
Processing stateless-10-10-2019.txt ... read  ... parsed  ... syntax analysed  ... semantic analysis complete ... passed.
Processing stateless-11-11-2019.txt ... read  ... parsed  ... syntax analysed  ... semantic analysis complete ... passed.
Processing stateless-12-12-2019.txt ... read  ... parsed  ... syntax analysed  ... semantic analysis complete ... passed.

Processing stateful
Processing stateful-01-01-2019.txt ... read  ... parsed  ... syntax analysed  ... semantic analysis complete ... passed.
Processing stateful-01-01-2020.txt ... read  ... parsed  ... syntax analysed  ... semantic analysis complete ... passed.
Processing stateful-02-02-2019.txt ... read  ... parsed  ... syntax analysed  ... semantic analysis complete ... passed.
Processing stateful-02-02-2020.txt ... read  ... parsed  ... syntax analysed  ... semantic analysis complete ... passed.
Processing stateful-03-03-2019.txt ... read  ... parsed  ... syntax analysed  ... semantic analysis complete ... passed.
Processing stateful-03-03-2020.txt ... read  ... parsed  ... syntax analysed  ... semantic analysis complete ... passed.
Processing stateful-04-04-2019.txt ... read  ... parsed  ... syntax analysed  ... semantic analysis complete ... passed.
Processing stateful-04-04-2020.txt ... read  ... parsed  ... syntax analysed  ... semantic analysis complete ... passed.
Processing stateful-05-05-2019.txt ... read  ... parsed  ... syntax analysed  ... semantic analysis complete ... passed.
Processing stateful-05-05-2020.txt ... read  ... parsed  ... syntax analysed  ... semantic analysis complete ... passed.
Processing stateful-06-06-2019.txt ... read  ... parsed  ... syntax analysed  ... semantic analysis complete ... passed.
Processing stateful-06-06-2020.txt ... read  ... parsed  ... syntax analysed  ... semantic analysis complete ... passed.
Processing stateful-07-07-2019.txt ... read  ... parsed  ... syntax analysed  ... semantic analysis complete ... passed.
Processing stateful-07-07-2020.txt ... read  ... parsed  ... syntax analysed  ... semantic analysis complete ... passed.
Processing stateful-08-08-2019.txt ... read  ... parsed  ... syntax analysed  ... semantic analysis complete ... passed.
Processing stateful-08-08-2020.txt ... read  ... parsed  ... syntax analysed  ... semantic analysis complete ... passed.
Processing stateful-09-09-2019.txt ... read  ... parsed  ... syntax analysed  ... semantic analysis complete ... passed.
Processing stateful-09-09-2020.txt ... read  ... parsed  ... syntax analysed  ... semantic analysis complete ... passed.
Processing stateful-10-10-2019.txt ... read  ... parsed  ... syntax analysed  ... semantic analysis complete ... passed.
Processing stateful-10-10-2020.txt ... read  ... parsed  ... syntax analysed  ... semantic analysis complete ... passed.
Processing stateful-11-11-2019.txt ... read  ... parsed  ... syntax analysed  ... semantic analysis complete ... passed.
Processing stateful-11-11-2020.txt ... read  ... parsed  ... syntax analysed  ... semantic analysis complete ... passed.
Processing stateful-12-12-2019.txt ... read  ... parsed  ... syntax analysed  ... semantic analysis complete ... passed.
Processing stateful-12-12-2020.txt ... read  ... parsed  ... syntax analysed  ... semantic analysis complete ... passed.


Warnings: 0 files generated warnings.



Errors: 0 files contained errors.



Summary:
* stateless-01-01-2019.txt: coins available=1880.4354, coins collected=943.04663 (no errors reported)
* stateless-02-02-2019.txt: coins available=2136.1936, coins collected=1488.6573 (no errors reported)
* stateless-03-03-2019.txt: coins available=2177.0789, coins collected=1210.1611 (no errors reported)
* stateless-04-04-2019.txt: coins available=2274.8113, coins collected=1346.1211 (no errors reported)
* stateless-05-05-2019.txt: coins available=1877.1597, coins collected=1132.1455 (no errors reported)
* stateless-06-06-2019.txt: coins available=2137.4634, coins collected=1325.215 (no errors reported)
* stateless-07-07-2019.txt: coins available=1903.8746, coins collected=1191.0995 (no errors reported)
* stateless-08-08-2019.txt: coins available=1815.7861, coins collected=1620.1083 (no errors reported)
* stateless-09-09-2019.txt: coins available=1800.3646, coins collected=1377.1769 (no errors reported)
* stateless-10-10-2019.txt: coins available=2301.3782, coins collected=1542.7942 (no errors reported)
* stateless-11-11-2019.txt: coins available=1974.8003, coins collected=1186.5986 (no errors reported)
* stateless-12-12-2019.txt: coins available=2492.0884, coins collected=1773.0084 (no errors reported)
     stateless drone total: 16136.133/24771.436 = 65.14%

* stateful-01-01-2019.txt: coins available=1880.4354, coins collected=1880.4355 (no errors reported)
* stateful-01-01-2020.txt: coins available=2141.0962, coins collected=2141.0967 (no errors reported)
* stateful-02-02-2019.txt: coins available=2136.1936, coins collected=2136.1936 (no errors reported)
* stateful-02-02-2020.txt: coins available=1911.6075, coins collected=1911.6075 (no errors reported)
* stateful-03-03-2019.txt: coins available=2177.0789, coins collected=2177.0789 (no errors reported)
* stateful-03-03-2020.txt: coins available=1960.443, coins collected=1960.4429 (no errors reported)
* stateful-04-04-2019.txt: coins available=2274.8113, coins collected=2274.8108 (no errors reported)
* stateful-04-04-2020.txt: coins available=2533.1794, coins collected=2533.1794 (no errors reported)
* stateful-05-05-2019.txt: coins available=1877.1597, coins collected=1877.1598 (no errors reported)
* stateful-05-05-2020.txt: coins available=2210.3735, coins collected=2210.374 (no errors reported)
* stateful-06-06-2019.txt: coins available=2137.4634, coins collected=2137.4634 (no errors reported)
* stateful-06-06-2020.txt: coins available=1873.7109, coins collected=1873.7108 (no errors reported)
* stateful-07-07-2019.txt: coins available=1903.8746, coins collected=1903.8746 (no errors reported)
* stateful-07-07-2020.txt: coins available=2647.6233, coins collected=2647.623 (no errors reported)
* stateful-08-08-2019.txt: coins available=1815.7861, coins collected=1815.786 (no errors reported)
* stateful-08-08-2020.txt: coins available=2170.0454, coins collected=2170.0452 (no errors reported)
* stateful-09-09-2019.txt: coins available=1800.3646, coins collected=1800.3645 (no errors reported)
* stateful-09-09-2020.txt: coins available=2292.5923, coins collected=2292.5925 (no errors reported)
* stateful-10-10-2019.txt: coins available=2301.3782, coins collected=2301.378 (no errors reported)
* stateful-10-10-2020.txt: coins available=2143.1592, coins collected=2143.1592 (no errors reported)
* stateful-11-11-2019.txt: coins available=1974.8003, coins collected=1974.8005 (no errors reported)
* stateful-11-11-2020.txt: coins available=2022.1965, coins collected=2022.1967 (no errors reported)
* stateful-12-12-2019.txt: coins available=2492.0884, coins collected=2492.0884 (no errors reported)
* stateful-12-12-2020.txt: coins available=2098.6946, coins collected=2098.6946 (no errors reported)
     stateful drone total: 50776.16/50776.16 = 100.00%


End report for student s1709906.

<<<<<<<<<<<<

END OF REPORT
